package com.goduke.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.goduke.converter.CandidatesTypeConverter;
import com.goduke.converter.QuestionsTypeConverter;
import com.goduke.converter.RecruiterTypeConverter;

import java.io.Serializable;
import java.util.List;

@DynamoDBTable(tableName = "tests")
public class Test extends TestWrapper implements Serializable {

	private String id;
	private List<String> languages;
	private String testName;
	private List<Question> questions;
	private String recruiter;
	private List<String> candidates;

	public Test(){

	}

	public Test(String id, List<String> languages, String name, List<Question> questions, String recruiter, List<String> candidates){
			this.id = id;
			this.languages = languages;
			this.testName = name;
			this.questions = questions;
			this.recruiter = recruiter;
			this.candidates = candidates;
	}

	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId(){
		return this.id;
	}

	public void setId(String id){
		this.id = id;
	}

	@DynamoDBAttribute(attributeName = "languages")
	public List<String> getLanguages(){
		return this.languages;
	}

	public void setLanguages(List<String> languages){
		this.languages = languages;
	}

	@DynamoDBAttribute(attributeName = "testName")
	public String getTestName(){
		return this.testName;
	}

	public void setTestName(String name){
		this.testName = name;
	}

	@DynamoDBTypeConverted(converter = QuestionsTypeConverter.class)
	@DynamoDBAttribute(attributeName = "questions")
	public List<Question> getQuestions(){
		return this.questions;
	}

	@DynamoDBAttribute(attributeName = "questions")
	public void setQuestions(List<Question> questions){
		this.questions = questions;
	}


	//@DynamoDBTypeConverted(converter = RecruiterTypeConverter.class)
	@DynamoDBAttribute(attributeName = "recruiter")
	public String getRecruiter(){
		return this.recruiter;
	}

	//@DynamoDBAttribute(attributeName = "recruiter")
	public void setRecruiter(String recruiter){
		this.recruiter = recruiter;
	}

	//@DynamoDBTypeConverted(converter = CandidatesTypeConverter.class)
	@DynamoDBAttribute(attributeName = "candidates")
	public List<String> getCandidates(){
		return this.candidates;
	}

	//@DynamoDBAttribute(attributeName = "candidates")
	public void setCandidates(List<String> candidates){
		this.candidates = candidates;
	}

}
